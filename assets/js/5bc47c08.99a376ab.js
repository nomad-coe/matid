"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[573],{9479:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>f,contentTitle:()=>m,default:()=>g,frontMatter:()=>h,metadata:()=>u,toc:()=>y});var i=t(5893),a=t(1151),r=(t(7294),t(9524));function s(e){let{src:n,caption:t}=e;return(0,i.jsxs)("figure",{style:{padding:"0.5rem",maxWidth:"36rem",marginRight:"auto",marginLeft:"auto"},children:[(0,i.jsx)("img",{src:(0,r.Z)(n),alt:t}),(0,i.jsx)("figcaption",{children:`Figure: ${t}`})]})}var o=t(7416);const l="from matid import SymmetryAnalyzer\nfrom ase.spacegroup import crystal\nfrom ase.visualize import view\n\n# Create an initial system with ASE\na = 5.64\nnacl = crystal(\n\t['Na', 'Cl'],\n\t[(0, 0, 0), (0.5, 0.5, 0.5)],\n\tspacegroup=225,\n    cellpar=[a, a, a, 90, 90, 90]\n) * [3, 2, 1]\nview(nacl)\n\n# Let's retrieve the conventional cell as ASE Atoms\nanalyzer = SymmetryAnalyzer(nacl)\nconventional_cell = analyzer.get_conventional_system()\nview(conventional_cell)",c="from matid import SymmetryAnalyzer\nfrom ase.spacegroup import crystal\nfrom ase.visualize import view\n\n# Create an initial system with ASE\na = 9.04\nskutterudite = crystal(\n    ('Co', 'Sb'),\n    basis=[(0.25, 0.25, 0.25), (0.0, 0.335, 0.158)],\n    spacegroup=204,\n    cellpar=[a, a, a, 90, 90, 90]\n)\nview(skutterudite)\n\n# Let's retrieve the material id\nanalyzer = SymmetryAnalyzer(skutterudite)\nmaterial_id = analyzer.get_material_id()\nprint(material_id)\n",d='from matid import SymmetryAnalyzer\nfrom ase.io import read\n\n# Load clathrate structure from file\nclathrate = read(\'clathrate.xyz\')\n\n# Print the wyckoff sets\nsymm = SymmetryAnalyzer(clathrate)\nwyckoff_sets_conv = symm.get_wyckoff_sets_conventional()\n\nfor i_group, group in enumerate(wyckoff_sets_conv):\n    print("Set {}".format(i_group))\n    print("    Letter: {}".format(group.wyckoff_letter))\n    print("    Element: {}".format(group.element))\n    print("    Indices: {}".format(group.indices))\n    print("    Multiplicity: {}".format(group.multiplicity))\n    print("    Repr.: {}".format(group.representative))\n    print("    x: {}".format(group.x))\n    print("    y: {}".format(group.y))\n    print("    z: {}".format(group.z))\n',h={sidebar_position:4},m="Symmetry Analysis",u={id:"learn/symmetry-analysis",title:"Symmetry Analysis",description:"The SymmetryAnalyzer class in MatID contains several symmetry routines for",source:"@site/docs/learn/symmetry-analysis.mdx",sourceDirName:"learn",slug:"/learn/symmetry-analysis",permalink:"/matid/docs/learn/symmetry-analysis",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Symmetry-based Clustering (SBC)",permalink:"/matid/docs/learn/symmetry-based-clustering"},next:{title:"Dimensionality Analysis",permalink:"/matid/docs/learn/dimensionality"}},f={},y=[{value:"Conventional Cell",id:"conventional-cell",level:2},{value:"Wyckoff sets",id:"wyckoff-sets",level:2},{value:"Material ID",id:"material-id",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"symmetry-analysis",children:"Symmetry Analysis"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"/docs/reference/symmetryanalyzer",children:(0,i.jsx)(n.code,{children:"SymmetryAnalyzer"})})," class in MatID contains several symmetry routines for\nanalyzing 3D structures. The basic features are based on the excellent ",(0,i.jsx)(n.code,{children:"spglib"}),"\nlibrary, but with an extended feature set that makes MatID unique. The following\nsubsections showcase some of its most interesting features and you can learn\nmore in the API reference."]}),"\n",(0,i.jsx)(n.h2,{id:"conventional-cell",children:"Conventional Cell"}),"\n",(0,i.jsxs)(n.p,{children:["For each space group there is a conventional cell that has been standardized by\nin ",(0,i.jsx)(n.a,{href:"https://it.iucr.org/A/",children:"Volume A of International Tables for Crystallography\n(ITA)"}),". This conventional cell can be retrieved by using\nthe\n",(0,i.jsx)(n.a,{href:"/docs/reference/symmetryanalyzer#get_conventional_system",children:(0,i.jsx)(n.code,{children:"get_conventional_system()"})}),"\nmethod, for example:"]}),"\n",(0,i.jsx)(o.Z,{language:"python",children:l}),"\n",(0,i.jsxs)(n.p,{children:["You could also use ",(0,i.jsx)(n.code,{children:"spglib"})," to retrieve the conventional cell, but MatID adds an\nadditional step of normalization to make the structure even more standardized.\nAlthough the shape and symmetries of the cell are already well-defined for a\nconventional cell reported by ",(0,i.jsx)(n.code,{children:"spglib"}),", the exact location of atoms in the cell\ncan vary. The same structure can have multiple representations, which all look\ndifferent. If you are only interested in the symmetry properties of the system,\nthis may not be relevant. But if instead you wish to generate a more unique\nstructure for the conventional cell for visualization or identification\npurposes, then additional processing is required."]}),"\n",(0,i.jsx)(n.p,{children:"Below is an example of the same rock salt structure (space group 225) in two\ndifferent configurations, and the result of spglib conventional cell and the\nMatID conventional cell."}),"\n",(0,i.jsx)(s,{src:"/img/conventional.svg",caption:"The original cell and the conventional cells from spglib and MatID for the NaCl rocksalt structure in two different variants, A and B."}),"\n",(0,i.jsxs)(n.p,{children:['The only difference in the two original structures is the way the Wyckoff\npositions have been filled: structure A has has Na in Wyckoff position "a" and\nCl in Wyckoff position "b" while in the second one these positions are reversed.\nThe conventional cell reported by MatID makes an additional step of searching\nfor the most unique representation based on chirality-preserving Euclidean\nNormalizers. These are reported e.g. by the ',(0,i.jsx)(n.a,{href:"https://www.cryst.ehu.es/",children:"Bilbao Crystal\ndatabase"}),". Each normalizer is essentially a transform\nthat can be applied to the structure to gain a new form of the conventional cell\nwithout modifying the underlying material. MatID iterates over these different\nrepresentations and selects one based on the population of different Wyckoff\nsites which differs among these representations."]}),"\n",(0,i.jsxs)(n.p,{children:["It should be noted that certain Wyckoff sites in certain space groups are\nparametrized. MatID does not perform any selection between these parameters, so\nin these cases the exact visual representation will still differ. By calling\n",(0,i.jsx)(n.a,{href:"/docs/reference/symmetryanalyzer#get_has_free_wyckoff_parameters",children:(0,i.jsx)(n.code,{children:"get_has_free_wyckoff_parameters()"})}),"\nyou can query whether the structure contains parametrized wyckoff positions."]}),"\n",(0,i.jsx)(n.h2,{id:"wyckoff-sets",children:"Wyckoff sets"}),"\n",(0,i.jsxs)(n.p,{children:["You can use\n",(0,i.jsx)(n.a,{href:"/docs/reference/symmetryanalyzer#get_wyckoff_sets_conventional",children:(0,i.jsx)(n.code,{children:"get_wyckoff_sets_conventional()"})}),"\nto query a detailed breakdown of the occupied Wyckoff sets in a material. The\nfollowing example shows an example of how you could query the Wyckoff sets in a\nfairly complicated clathrate material:"]}),"\n",(0,i.jsx)(o.Z,{language:"python",children:d}),"\n",(0,i.jsx)(n.p,{children:"The output of this script is:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Set 0\n    Letter: c\n    Element: Si\n    Indices: [40, 41, 42, 43, 44, 45]\n    Multiplicity: 6\n    Repr.: ['1/4', '0', '1/2']\n    x: None\n    y: None\n    z: None\nSet 1\n    Letter: i\n    Element: Si\n    Indices: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n    Multiplicity: 16\n    Repr.: ['x', 'x', 'x']\n    x: 0.6837\n    y: None\n    z: None\nSet 2\n    Letter: k\n    Element: Si\n    Indices: [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]\n    Multiplicity: 24\n    Repr.: ['0', 'y', 'z']\n    x: None\n    y: 0.6922999999999999\n    z: 0.8827999999999999\n\n"})}),"\n",(0,i.jsx)(n.h2,{id:"material-id",children:"Material ID"}),"\n",(0,i.jsxs)(n.p,{children:["You can use\n",(0,i.jsx)(n.a,{href:"/docs/reference/symmetryanalyzer#get_material_id",children:(0,i.jsx)(n.code,{children:"get_material_id()"})}),' to\nreport a 28-digit character sequence for a given structure. This is essentially\na hash-digest which is seeded using information about the space group,\ndimensionality and the Wyckoff sites occupied in the conventional cell. Due to\nthe way MatID generates the conventional cell, this identifier is fairly unique\nand can be used in many cases to identify structures 3D and 2D materials with\n"enough" symmetry.']}),"\n",(0,i.jsxs)(n.p,{children:["The material id can act as a convenient handle for finding materials with very\nspecific structure. As a simple example one could imagine trying to find\n",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Skutterudite",children:"skutterudite"}),". The filters required for this would include:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Space group number"}),"\n",(0,i.jsx)(n.li,{children:"Wyckoff position occupation (assuming a normalized one is available)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Often this information is not directly reported and if it is, it can be a\ndaunting task for the user to formulate the queries precisely. This is where the\nmaterial id can offer a shortcut: you can use MatID to retrieve it for a\nstructure and use it in queries, provided that a database has it stored. For\nexample, if you have an atomic structure, you could use the following script to\nretrieve the material id for it:"}),"\n",(0,i.jsx)(o.Z,{language:"python",children:c}),"\n",(0,i.jsxs)(n.p,{children:["This material id can then be used e.g. in the ",(0,i.jsx)(n.a,{href:"https://nomad-lab.eu/",children:"NOMAD"})," platform to query for structures\ncontaining skutterudite (",(0,i.jsx)(n.code,{children:"material id = zI9HC39lOUK_w2Clv8XUHb43tYVV"}),")."]}),"\n",(0,i.jsx)(n.p,{children:"The material id is not guaranteed to be unique, but can be highly useful in\npractice. In some sense it has a similar value proposal to SMILES for molecules.\nThere are some of the cases in which it will fail:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Parametrized Wyckoff sites"}),"\n",(0,i.jsx)(n.li,{children:"If isotropic scaling of cell should affect the material identification"}),"\n",(0,i.jsx)(n.li,{children:"If variable angles for the conventional cell are a problem"}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);